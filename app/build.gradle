buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.stanfy.spoon:spoon-gradle-plugin:0.10.+'
        classpath 'com.android.tools.build:gradle:0.10.+'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.9.+'
        classpath 'com.github.nrudenko:gradle-android-cq-plugin:0.1+'
    }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'android'
apply plugin: 'spoon'
apply plugin: 'android-cq'

repositories {
    mavenCentral()
}

dependencies {
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.+'
    androidTestCompile 'com.squareup.spoon:spoon-client:1.1.+'

    compile 'com.jakewharton:butterknife:5.1.0'
    compile 'com.android.support:support-v4:19.1.+'
    compile 'com.github.machinarius:preferencefragment:0.1.1'


    compile project(':domain')
}


android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        versionCode 20
        versionName "0.4-BETA"
        minSdkVersion 7
        targetSdkVersion 19
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            runProguard true
            proguardFile 'proguard-rules.txt'
            proguardFile getDefaultProguardFile('proguard-android.txt')
        }
    }

    // specify signing properties on the command line
    if (project.hasProperty('storeFile')) {
        println 'Generating a signed package.'
        android.signingConfigs.release.storeFile = file(storeFile)
        android.signingConfigs.release.storePassword = storePassword
        android.signingConfigs.release.keyAlias = keyAlias
        android.signingConfigs.release.keyPassword = keyPassword
    } else {
        android.buildTypes.release.signingConfig = null
    }
}
